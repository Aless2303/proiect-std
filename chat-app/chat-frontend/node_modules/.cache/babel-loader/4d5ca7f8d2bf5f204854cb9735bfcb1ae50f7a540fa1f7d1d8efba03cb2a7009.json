{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-section\"\n};\nconst _hoisted_3 = {\n  class: \"message-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Chat\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"Username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message = $event),\n    placeholder: \"Message\",\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\")]), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, msg => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: msg._id\n    }, \" [\" + _toDisplayString(new Date(msg.timestamp).toLocaleString()) + \"] \" + _toDisplayString(msg.username) + \": \" + _toDisplayString(msg.message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$data","username","placeholder","message","onKeyup","_withKeys","args","$options","sendMessage","onClick","_hoisted_3","_Fragment","_renderList","messages","msg","key","_id","_toDisplayString","Date","timestamp","toLocaleString"],"sources":["D:\\anu3\\sem2\\std\\proiect\\chat-app\\chat-frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <h2>Chat</h2>\n    <div class=\"input-section\">\n      <input v-model=\"username\" placeholder=\"Username\" />\n      <input v-model=\"message\" placeholder=\"Message\" @keyup.enter=\"sendMessage\" />\n      <button @click=\"sendMessage\">Send</button>\n    </div>\n    <ul class=\"message-list\">\n      <li v-for=\"msg in messages\" :key=\"msg._id\">\n        [{{ new Date(msg.timestamp).toLocaleString() }}] {{ msg.username }}: {{ msg.message }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      username: '',\n      message: '',\n      messages: [],\n      ws: null\n    };\n  },\n  mounted() {\n    this.ws = new WebSocket('ws://localhost:88');\n    this.ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'history') {\n        this.messages = data.data;\n      } else if (data.type === 'message') {\n        this.messages.push(data.data);\n      }\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.username && this.message) {\n        this.ws.send(JSON.stringify({ username: this.username, message: this.message }));\n        this.message = '';\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.chat-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n}\n.input-section {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\ninput {\n  padding: 5px;\n  flex: 1;\n}\nbutton {\n  padding: 5px 10px;\n}\n.message-list {\n  list-style: none;\n  padding: 0;\n  max-height: 400px;\n  overflow-y: auto;\n  border: 1px solid #ccc;\n  padding: 10px;\n}\nli {\n  margin-bottom: 10px;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAe;;EAKtBA,KAAK,EAAC;AAAc;;uBAP1BC,mBAAA,CAYM,OAZNC,UAYM,G,0BAXJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAIM,OAJNC,UAIM,G,gBAHJD,mBAAA,CAAmD;IAJzD,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIsBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,KAAA,CAAAC,QAAQ,E,mBACxBL,mBAAA,CAA4E;IALlF,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKsBC,KAAA,CAAAG,OAAO,GAAAJ,MAAA;IAAEG,WAAW,EAAC,SAAS;IAAEE,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAL3DO,SAAA,KAAAC,IAAA,KAKmEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;iEAAxDN,KAAA,CAAAG,OAAO,E,GACvBP,mBAAA,CAA0C;IAAjCa,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,MAAI,E,GAEnCV,mBAAA,CAIK,MAJLc,UAIK,I,kBAHHhB,mBAAA,CAEKiB,SAAA,QAXXC,WAAA,CASwBZ,KAAA,CAAAa,QAAQ,EAAfC,GAAG;yBAAdpB,mBAAA,CAEK;MAFwBqB,GAAG,EAAED,GAAG,CAACE;OAAK,IACxC,GAAAC,gBAAA,KAAOC,IAAI,CAACJ,GAAG,CAACK,SAAS,EAAEC,cAAc,MAAK,IAAE,GAAAH,gBAAA,CAAGH,GAAG,CAACb,QAAQ,IAAG,IAAE,GAAAgB,gBAAA,CAAGH,GAAG,CAACX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}